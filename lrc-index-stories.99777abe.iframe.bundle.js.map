{"version":3,"file":"lrc-index-stories.99777abe.iframe.bundle.js","mappings":";;;;;;AAUA;;;;;ACEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACwBA;;;;;;;AAWA;AACA;AACA;AAEA","sources":["webpack://react-lrc/./examples/control.tsx","webpack://react-lrc/./examples/lrc/static.tsx","webpack://react-lrc/./examples/lrc/auto_scroll.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst Style = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 10px 20px;\n  background: rgb(222 222 222);\n`;\n\nfunction Control({\n  onPlay,\n  onPause,\n  onReset,\n  current,\n  setCurrent,\n  recoverAutoScrollImmediately,\n}: {\n  onPlay: () => void;\n  onPause: () => void;\n  onReset: () => void;\n  current: number;\n  setCurrent: (c: number) => void;\n  recoverAutoScrollImmediately: () => void;\n}) {\n  return (\n    <Style>\n      <button type=\"button\" onClick={onPlay}>\n        play\n      </button>\n      <button type=\"button\" onClick={onPause}>\n        pause\n      </button>\n      <button type=\"button\" onClick={onReset}>\n        reset\n      </button>\n      <input\n        type=\"number\"\n        value={current}\n        onChange={(event) => setCurrent(Number(event.target.value))}\n      />\n      <button type=\"button\" onClick={recoverAutoScrollImmediately}>\n        recover auto scroll immediately\n      </button>\n    </Style>\n  );\n}\n\nexport default Control;\n","/* eslint-disable react/no-unstable-nested-components */\nimport styled from 'styled-components';\nimport { Lrc } from '../../src';\nimport { formatMillisecond } from '../utils';\n\nconst Line = styled.div`\n  > .time {\n    color: orange;\n    font-family: monospace;\n  }\n`;\n\nfunction StaticLrc({ lrc }: { lrc: string }) {\n  return (\n    <Lrc\n      lrc={lrc}\n      lineRenderer={({ line }) => (\n        <Line>\n          <span className=\"time\">\n            {formatMillisecond(line.startMillisecond)}\n          </span>\n          &nbsp;\n          {line.content}\n        </Line>\n      )}\n    />\n  );\n}\n\nexport default StaticLrc;\n","/* eslint-disable react/no-unstable-nested-components */\nimport { type CSSProperties } from 'react';\nimport styled, { css } from 'styled-components';\nimport { Lrc, useRecoverAutoScrollImmediately } from '../../src';\nimport useTimer from '../use_timer';\nimport Control from '../control';\n\nconst Root = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n\n  display: flex;\n  flex-direction: column;\n\n  > .lrc-box {\n    position: relative;\n\n    flex: 1;\n    min-height: 0;\n\n    &::before {\n      content: '';\n      width: 100%;\n      height: 1px;\n\n      position: absolute;\n      top: 50%;\n      left: 0;\n\n      background: rgb(255 0 0 / 0.15);\n    }\n  }\n`;\nconst lrcStyle: CSSProperties = {\n  height: '100%',\n  padding: '5px 0',\n};\nconst Line = styled.div<{ active: boolean }>`\n  min-height: 10px;\n  padding: 5px 20px;\n\n  font-size: 16px;\n  text-align: center;\n\n  ${({ active }) => css`\n    color: ${active ? 'green' : 'black'};\n  `}\n`;\nconst log = console.log.bind(console);\n\nfunction LrcDemo({\n  lrc,\n  recoverAutoScrollInterval,\n  verticalSpace,\n}: {\n  lrc: string;\n  recoverAutoScrollInterval: number;\n  verticalSpace: boolean;\n}) {\n  const { currentMillisecond, setCurrentMillisecond, reset, play, pause } =\n    useTimer(2);\n  const { signal, recoverAutoScrollImmediately } =\n    useRecoverAutoScrollImmediately();\n\n  return (\n    <Root>\n      <Control\n        onPlay={play}\n        onPause={pause}\n        onReset={reset}\n        current={currentMillisecond}\n        setCurrent={setCurrentMillisecond}\n        recoverAutoScrollImmediately={recoverAutoScrollImmediately}\n      />\n      <div className=\"lrc-box\">\n        <Lrc\n          lrc={lrc}\n          lineRenderer={({ active, line: { content } }) => (\n            <Line active={active}>{content}</Line>\n          )}\n          currentMillisecond={currentMillisecond}\n          verticalSpace={verticalSpace}\n          style={lrcStyle}\n          recoverAutoScrollSingal={signal}\n          recoverAutoScrollInterval={recoverAutoScrollInterval}\n          onLineUpdate={log}\n          onAutoScrollChange={log}\n        />\n      </div>\n    </Root>\n  );\n}\n\nexport default LrcDemo;\n"],"names":[],"sourceRoot":""}